import{t as h,c as k}from"./differenceInYears-BdTDs0wt.js";import{d as x}from"./myFormat-D_0w4-pK.js";function T(t,n){return t instanceof Date?new t.constructor(n):new Date(n)}const F=36e5,M=43200,P=1440;let X={};function A(){return X}function D(t){const n=h(t),e=new Date(Date.UTC(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds()));return e.setUTCFullYear(n.getFullYear()),+t-+e}function C(t){return T(t,Date.now())}function W(t){return n=>{const a=(t?Math[t]:Math.trunc)(n);return a===0?0:a}}function S(t,n){return+h(t)-+h(n)}function yt(t,n,e){const a=S(t,n)/F;return W(e==null?void 0:e.roundingMethod)(a)}function p(t,n,e){const a=S(t,n)/1e3;return W(e==null?void 0:e.roundingMethod)(a)}const O={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}},j=(t,n,e)=>{let a;const r=O[t];return typeof r=="string"?a=r:n===1?a=r.one:a=r.other.replace("{{count}}",n.toString()),e!=null&&e.addSuffix?e.comparison&&e.comparison>0?"in "+a:a+" ago":a};function v(t){return(n={})=>{const e=n.width?String(n.width):t.defaultWidth;return t.formats[e]||t.formats[t.defaultWidth]}}const I={full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},N={full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},V={full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},Y={date:v({formats:I,defaultWidth:"full"}),time:v({formats:N,defaultWidth:"full"}),dateTime:v({formats:V,defaultWidth:"full"})},z={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"},q=(t,n,e,a)=>z[t];function g(t){return(n,e)=>{const a=e!=null&&e.context?String(e.context):"standalone";let r;if(a==="formatting"&&t.formattingValues){const o=t.defaultFormattingWidth||t.defaultWidth,i=e!=null&&e.width?String(e.width):o;r=t.formattingValues[i]||t.formattingValues[o]}else{const o=t.defaultWidth,i=e!=null&&e.width?String(e.width):t.defaultWidth;r=t.values[i]||t.values[o]}const c=t.argumentCallback?t.argumentCallback(n):n;return r[c]}}const J={narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},R={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},E={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},H={narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},L={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},Q={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},_=(t,n)=>{const e=Number(t),a=e%100;if(a>20||a<10)switch(a%10){case 1:return e+"st";case 2:return e+"nd";case 3:return e+"rd"}return e+"th"},U={ordinalNumber:_,era:g({values:J,defaultWidth:"wide"}),quarter:g({values:R,defaultWidth:"wide",argumentCallback:t=>t-1}),month:g({values:E,defaultWidth:"wide"}),day:g({values:H,defaultWidth:"wide"}),dayPeriod:g({values:L,defaultWidth:"wide",formattingValues:Q,defaultFormattingWidth:"wide"})};function b(t){return(n,e={})=>{const a=e.width,r=a&&t.matchPatterns[a]||t.matchPatterns[t.defaultMatchWidth],c=n.match(r);if(!c)return null;const o=c[0],i=a&&t.parsePatterns[a]||t.parsePatterns[t.defaultParseWidth],d=Array.isArray(i)?K(i,y=>y.test(o)):B(i,y=>y.test(o));let u;u=t.valueCallback?t.valueCallback(d):d,u=e.valueCallback?e.valueCallback(u):u;const l=n.slice(o.length);return{value:u,rest:l}}}function B(t,n){for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e)&&n(t[e]))return e}function K(t,n){for(let e=0;e<t.length;e++)if(n(t[e]))return e}function $(t){return(n,e={})=>{const a=n.match(t.matchPattern);if(!a)return null;const r=a[0],c=n.match(t.parsePattern);if(!c)return null;let o=t.valueCallback?t.valueCallback(c[0]):c[0];o=e.valueCallback?e.valueCallback(o):o;const i=n.slice(r.length);return{value:o,rest:i}}}const G=/^(\d+)(th|st|nd|rd)?/i,Z=/\d+/i,tt={narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},et={any:[/^b/i,/^(a|c)/i]},nt={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},at={any:[/1/i,/2/i,/3/i,/4/i]},rt={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},it={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},ot={narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},st={narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},ut={narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},ct={any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},dt={ordinalNumber:$({matchPattern:G,parsePattern:Z,valueCallback:t=>parseInt(t,10)}),era:b({matchPatterns:tt,defaultMatchWidth:"wide",parsePatterns:et,defaultParseWidth:"any"}),quarter:b({matchPatterns:nt,defaultMatchWidth:"wide",parsePatterns:at,defaultParseWidth:"any",valueCallback:t=>t+1}),month:b({matchPatterns:rt,defaultMatchWidth:"wide",parsePatterns:it,defaultParseWidth:"any"}),day:b({matchPatterns:ot,defaultMatchWidth:"wide",parsePatterns:st,defaultParseWidth:"any"}),dayPeriod:b({matchPatterns:ut,defaultMatchWidth:"any",parsePatterns:ct,defaultParseWidth:"any"})},lt={code:"en-US",formatDistance:j,formatLong:Y,formatRelative:q,localize:U,match:dt,options:{weekStartsOn:0,firstWeekContainsDate:1}};function mt(t,n,e){const a=A(),r=(e==null?void 0:e.locale)??a.locale??lt,c=2520,o=k(t,n);if(isNaN(o))throw new RangeError("Invalid time value");const i=Object.assign({},e,{addSuffix:e==null?void 0:e.addSuffix,comparison:o});let d,u;o>0?(d=h(n),u=h(t)):(d=h(t),u=h(n));const l=p(u,d),y=(D(u)-D(d))/1e3,s=Math.round((l-y)/60);let f;if(s<2)return e!=null&&e.includeSeconds?l<5?r.formatDistance("lessThanXSeconds",5,i):l<10?r.formatDistance("lessThanXSeconds",10,i):l<20?r.formatDistance("lessThanXSeconds",20,i):l<40?r.formatDistance("halfAMinute",0,i):l<60?r.formatDistance("lessThanXMinutes",1,i):r.formatDistance("xMinutes",1,i):s===0?r.formatDistance("lessThanXMinutes",1,i):r.formatDistance("xMinutes",s,i);if(s<45)return r.formatDistance("xMinutes",s,i);if(s<90)return r.formatDistance("aboutXHours",1,i);if(s<P){const m=Math.round(s/60);return r.formatDistance("aboutXHours",m,i)}else{if(s<c)return r.formatDistance("xDays",1,i);if(s<M){const m=Math.round(s/P);return r.formatDistance("xDays",m,i)}else if(s<M*2)return f=Math.round(s/M),r.formatDistance("aboutXMonths",f,i)}if(f=x(u,d),f<12){const m=Math.round(s/M);return r.formatDistance("xMonths",m,i)}else{const m=f%12,w=Math.trunc(f/12);return m<3?r.formatDistance("aboutXYears",w,i):m<9?r.formatDistance("overXYears",w,i):r.formatDistance("almostXYears",w+1,i)}}function gt(t,n){return mt(t,C(t),n)}export{yt as d,gt as f};
